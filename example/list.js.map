{"version":3,"file":"list.js","sourceRoot":"/Users/mjong/Development/AppDOM/src/","sources":["example/list.ts"],"names":[],"mappings":";;;AAAA,wBAAwC;AAExC;IAA8B,oCAAU;IAKtC,kBAAY,IAAa;QAAzB,YACE,kBAAM,IAAI,CAAC,SAeZ;QAbC,IAAI,QAAQ,GAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,YAAQ,CAAC,UAAU,CAAC,CAAC;QACxD,IAAI,KAAK,GAAG,KAAI,CAAC,KAAK,GAAG,IAAI,cAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,MAAM,GAAG,KAAI,CAAC,MAAM,GAAG,IAAI,cAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAEzD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC3B,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAEzB,IAAI,IAAI,GAAG,KAAI,CAAC;QAEhB,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,EAAE,KAAK,CAAC,CAAC;;IACZ,CAAC;IACH,eAAC;AAAD,CAAC,AAtBD,CAA8B,cAAU,GAsBvC;AAtBY,4BAAQ;AAwBrB;IAA0B,gCAAU;IAIlC;QAAA,YACE,kBAAM,MAAM,CAAC,SAYd;QAVC,IAAI,KAAK,GAAG,KAAI,CAAC,KAAK,GAAG,IAAI,YAAQ,EAAE,CAAC;QACxC,IAAI,IAAI,GAAG,KAAI,CAAC,IAAI,GAAG,IAAI,cAAU,CAAC,IAAI,CAAC,CAAC;QAE5C,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAEvB,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5C,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACnB,CAAC,EAAE,KAAK,CAAC,CAAC;;IACZ,CAAC;IACH,WAAC;AAAD,CAAC,AAlBD,CAA0B,cAAU,GAkBnC;AAlBY,oBAAI;AAqBjB,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAEtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import {AppElement, AppInput} from '..';\n\nexport class ListItem extends AppElement {\n  checkbox : AppInput;\n  label : AppElement;\n  button : AppElement;\n\n  constructor(text : string) {\n    super('li');\n\n    let checkbox = this.checkbox = new AppInput('checkbox');\n    let label = this.label = new AppElement('label', text);\n    let button = this.button = new AppElement('button', 'X');\n\n    this.appendChild(checkbox);\n    this.appendChild(label);\n    this.appendChild(button);\n\n    let self = this;\n\n    button.addEventListener('click', () => {\n      self.remove();\n    }, false);\n  }\n}\n\nexport class List extends AppElement {\n  input : AppInput;\n  list : AppElement;\n\n  constructor() {\n    super('list');\n\n    let input = this.input = new AppInput();\n    let list = this.list = new AppElement('ul');\n\n    this.appendChild(input);\n    this.appendChild(list);\n\n    input.addEventListener('change', () => {\n      list.appendChild(new ListItem(input.value));\n      input.value = '';\n    }, false);\n  }\n}\n\n\nlet list = new List();\n\nlist.appendToDOM(document.body);\n"]}