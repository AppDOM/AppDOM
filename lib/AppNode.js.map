{"version":3,"file":"AppNode.js","sourceRoot":"/Users/mjong/Development/AppDOM/src/","sources":["lib/AppNode.ts"],"names":[],"mappings":";;AAEA;IAIE,iBAAY,OAA4B;QAFxC,WAAM,GAAuB,IAAI,CAAC;QAGhC,EAAE,CAAC,CAAC,OAAO,YAAY,WAAW,IAAI,OAAO,YAAY,IAAI,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC;IAED,wBAAM,GAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,8BAAY,GAAZ,UAAa,OAAiB;QAC5B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YAC3D,IAAI,GAAG,GAAY,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACpD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAErC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,6BAAW,GAAX,UAAY,OAAiB;QAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACvE,IAAI,GAAG,GAAY,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACpD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAEzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,6BAAW,GAAX,UAAY,GAAiB;QAC3B,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE9B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,cAAC;AAAD,CAAC,AArDD,IAqDC;AArDY,0BAAO","sourcesContent":["import {AppElement} from './AppElement';\n\nexport class AppNode {\n  element :  HTMLElement | Text;\n  parent : AppElement | null = null;\n\n  constructor(element : HTMLElement | Text) {\n    if (element instanceof HTMLElement || element instanceof Text) {\n      this.element = element;\n    } else {\n      throw new Error('Cannot construct AppNode');\n    }\n  }\n\n  remove() : AppNode {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    return this;\n  }\n\n  insertBefore(sibling : AppNode) : AppNode {\n    let parent = sibling.parent;\n    if (parent) {\n      this.remove();\n      parent.element.insertBefore(this.element, sibling.element);\n      let pos : number = parent.children.indexOf(sibling);\n      parent.children.splice(pos, 0, this);\n\n      this.parent = parent;\n    }\n\n    return this;\n  }\n\n  insertAfter(sibling : AppNode) : AppNode {\n    let parent = sibling.parent;\n    if (parent) {\n      this.remove();\n      parent.element.insertBefore(this.element, sibling.element.nextSibling);\n      let pos : number = parent.children.indexOf(sibling);\n      parent.children.splice(pos + 1, 0, this);\n\n      this.parent = parent;\n    }\n\n    return this;\n  }\n\n  appendToDOM(dom : HTMLElement) : AppNode {\n    dom.appendChild(this.element);\n\n    return this;\n  }\n}\n"]}